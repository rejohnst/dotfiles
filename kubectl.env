alias k='kubectl'
alias pods='kubectl get pods -A -o wide'
alias services='kubectl get services -A'
alias vms='kubectl get vms -A'
alias vmis='kubectl get vmis -A'

function getall {
	local namespace=$1
	kubectl get all -n $namespace
}

function logs {
	local pod=$1
	local namespace=$(kubectl get pods -A | grep $pod | awk '{ print $1 }')
	kubectl logs $pod -n $namespace --all-containers
}


function poddesc {
	local pod=$1
	local namespace=$(kubectl get pods -A | grep $pod | awk '{ print $1 }')
	kubectl describe pods $pod -n $namespace
}

#
# Interactively edit specified pod
#
function podedit {
	local pod=$1
	local namespace=$(kubectl get pods -A | grep $pod | awk '{ print $1 }')
	kubectl edit pod $pod -n $namespace
}

#
# Print all images used by the specified deployment
#
function podimgs {
	local pod=$1
	local namespace=$(kubectl get pods -A | grep $pod | awk '{ print $1 }')
	kubectl get pods $pod -n $namespace -o \
	    jsonpath='{.spec.containers[*].image}{"\n"}'
}

#
# Interactively edit specified deployment
#
function depedit {
	local deployment=$1
	local namespace=$(kubectl get pods -A | grep $deployment | tail -1 | awk '{ print $1 }')
	kubectl edit deployment.v1.apps/$deployment -n $namespace
}

#
# Print all images used by the specified deployment
#
function depimgs {
	local deployment=$1
	local namespace=$(kubectl get pods -A | grep $deployment | tail -1 | awk '{ print $1 }')
	kubectl get deployments $deployment -n $namespace -o \
	    jsonpath='{.spec.template.spec.containers[*].image}{"\n"}'
}

function gettoken {
	local secret=$1
	local namespace=$2
	kubectl get secrets $secret -n $namespace -o jsonpath='{.data.token}' | base64 --decode
}
